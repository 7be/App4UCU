{"version":3,"sources":["components/ucu/Ucu.js","index.js","App.js"],"names":["sliderIntValues","value","label","sliderFloatValues","Ucu","useState","inputFieldInteger","setInputFieldInteger","sliderValue","setSliderValue","switchButton","setSwitchButton","someFloatValue","setSomeFloatValue","xmlUpload","setXmlUpload","showElement","setShowElement","a","fetch","then","res","text","method","body","loopbackValue","toString","useEffect","fileReader","FileReader","onload","result","includes","readAsText","console","log","fetchSwitchButtonData","fetchSwitchButtonPutData","fetchSliderValueData","fetchSliderValuePutData","className","accept","style","display","id","multiple","type","onChange","e","target","files","htmlFor","Button","background","borderRadius","border","color","height","padding","boxShadow","variant","component","onSubmit","xml","require","create","encoding","ele","up","end","pretty","FileSaver","blob","Blob","saveAs","checked","onstyle","size","offstyle","TextField","InputLabelProps","event","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","track","marks","min","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26093da1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Slider, TextField } from '@material-ui/core';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\nimport './Ucu.css';\r\n\r\nconst sliderIntValues = [\r\n    {\r\n        value: 0,\r\n        label: '0',\r\n    },\r\n    {\r\n        value: 50,\r\n        label: '50',\r\n    },\r\n    {\r\n        value: 100,\r\n        label: '100',\r\n    },\r\n];\r\n\r\nconst sliderFloatValues = [\r\n    {\r\n        value: 0.0,\r\n        label: '0.0',\r\n    },\r\n    {\r\n        value: 5.0,\r\n        label: '5.0',\r\n    },\r\n    {\r\n        value: 10.0,\r\n        label: '10.0',\r\n    },\r\n];\r\n\r\n\r\n\r\n\r\nexport default function Ucu() {\r\n\r\n    const [inputFieldInteger, setInputFieldInteger] = useState(44);\r\n    const [sliderValue, setSliderValue] = useState(30);\r\n    const [switchButton, setSwitchButton] = useState(true);\r\n    const [someFloatValue, setSomeFloatValue] = useState(1.5);\r\n    const [xmlUpload, setXmlUpload] = useState(null);\r\n    const [showElement, setShowElement] = useState(false);\r\n\r\n    function uploadXMLHandler(e) {\r\n        setXmlUpload(e.target.files[0]);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (xmlUpload != null) {\r\n            var fileReader = new FileReader();\r\n            fileReader.onload = () => {\r\n                if (fileReader.result.includes(\"test_b\")) {\r\n                    setShowElement(true);\r\n                } else {\r\n                    setShowElement(false);\r\n                }\r\n            };\r\n            fileReader.readAsText(xmlUpload);\r\n\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    async function fetchSwitchButtonData() {\r\n        fetch('/sb')\r\n            .then(res => res.text())\r\n    }\r\n\r\n    async function fetchSwitchButtonPutData() {\r\n        fetch('/sb', {\r\n            method: 'PUT', body: switchButton ? '1' : '0'\r\n        })\r\n            .then(res => res.text())\r\n    }\r\n\r\n\r\n\r\n\r\n    async function fetchSliderValueData() {\r\n        fetch('/sv')\r\n            .then(res => res.text())\r\n    }\r\n\r\n    async function fetchSliderValuePutData() {\r\n        let loopbackValue = sliderValue.toString();\r\n        fetch('/sv', {\r\n            method: 'PUT', body: loopbackValue\r\n        })\r\n            .then(res => res.text())\r\n    }\r\n\r\n\r\n    function handleNormalFieldInteger(event, value) {\r\n        setInputFieldInteger(event.target.value);\r\n    }\r\n\r\n    function handleChange(event, value) {\r\n        setSliderValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Switch button is turned \" + (switchButton ? 'on' : 'off'));\r\n        console.log('Slider value ' + sliderValue);\r\n        fetchSwitchButtonData();\r\n        fetchSwitchButtonPutData();\r\n        fetchSliderValueData();\r\n        fetchSliderValuePutData();\r\n    });\r\n\r\n    function handleSwitchButton() {\r\n        setSwitchButton(!switchButton);\r\n    }\r\n\r\n    function handleFloatValue(event, value) {\r\n        setSomeFloatValue(value);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        console.log(switchButton);\r\n        console.log(sliderValue);\r\n        console.log(someFloatValue);\r\n\r\n        var builder = require('xmlbuilder');\r\n        var xml = builder.create('config', { encoding: 'utf-8' })\r\n            .ele('types').up()\r\n            .ele('componenents')\r\n            .ele('component', { 'name': 'AMOS_APP4UCU' })\r\n            .ele('ports')\r\n            .ele('receiver', { 'name': 'toApp' })\r\n            .ele('element', {\r\n                'name': 'test_u8',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'uint8'\r\n            }, sliderValue).up()\r\n            .ele('element', {\r\n                'name': 'test_i8',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'sint8'\r\n            }, sliderValue).up()\r\n            .ele('element', {\r\n                'name': 'test_u16',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'uint16'\r\n            }, sliderValue).up()\r\n            .ele('element', {\r\n                'name': 'test_i16',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'sint16'\r\n            }, sliderValue).up()\r\n            .ele('element', {\r\n                'name': 'test_u32',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'uint32'\r\n            }, inputFieldInteger).up()\r\n            .ele('element', {\r\n                'name': 'test_i32',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'sint32'\r\n            }, inputFieldInteger).up()\r\n            .ele('element', {\r\n                'name': 'test_r32',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'float32'\r\n            }, someFloatValue).up()\r\n            .ele('element', {\r\n                'name': 'test_b',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'boolean',\r\n            }, switchButton).up().up()\r\n            .ele('sender', { 'name': 'fromApp' })\r\n            .ele('element', {\r\n                'name': 'test_u8',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'uint8'\r\n            }, sliderValue).up()\r\n            .ele('element', {\r\n                'name': 'test_i8',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'sint8'\r\n            }, sliderValue).up()\r\n            .ele('element', {\r\n                'name': 'test_u16',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'uint16'\r\n            }, sliderValue).up()\r\n            .ele('element', {\r\n                'name': 'test_i16',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'sint16'\r\n            }, sliderValue).up()\r\n            .ele('element', {\r\n                'name': 'test_u32',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'uint32'\r\n            }, inputFieldInteger).up()\r\n            .ele('element', {\r\n                'name': 'test_i32',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'sint32'\r\n            }, inputFieldInteger).up()\r\n            .ele('element', {\r\n                'name': 'test_r32',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'float32'\r\n            }, someFloatValue).up()\r\n            .ele('element', {\r\n                'name': 'test_b',\r\n                'init': '0',\r\n                'min': '0',\r\n                'max': '0',\r\n                'type': 'boolean',\r\n            }, switchButton).up()\r\n            .end({ pretty: true });\r\n        console.log(xml)\r\n\r\n        //we can use File as well but IE and Edge do not support that so it is better to use Blob because it is supported\r\n        var FileSaver = require('file-saver');\r\n        var blob = new Blob([xml], { type: \"application/xml;charset=utf-8\" });\r\n        FileSaver.saveAs(blob, \"AMOS_APP4UCU.xml\");\r\n    }\r\n\r\n    const style = {\r\n  \r\n};\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Ucu\">\r\n            <h1 className=\"welcomeHeader\">This is the webserver page for the UCU microcontroller. <br /></h1>\r\n            <div className=\"uploadXML\">\r\n                <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: 'none' }}\r\n                    id=\"raised-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={uploadXMLHandler}\r\n                />\r\n                <label htmlFor=\"raised-button-file\">\r\n                    <Button\r\n                    style = {{\r\n                        background: 'linear-gradient(45deg, #be2a92bd 30%, #FF8E53 90%)',\r\n                        borderRadius: 3,\r\n                        border: 0,\r\n                        color: 'white',\r\n                        height: 48,\r\n                        padding: '0 30px',\r\n                        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n                    }}\r\n                     variant=\"contained\" component=\"span\" className=\"uploadButton\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                {showElement ?\r\n                    <div className=\"switchButtonDiv\">\r\n                        <h2>\r\n                            Turn On and Off<BootstrapSwitchButton\r\n                                checked={switchButton}\r\n                                onstyle='success'\r\n                                size='sm'\r\n                                offstyle='danger'\r\n                                onChange={handleSwitchButton}\r\n                            />\r\n                        </h2>\r\n                    </div>\r\n\r\n                    : null\r\n                }\r\n\r\n                <h2>\r\n                    <div className=\"normalField\">\r\n                        <h2>\r\n                            <TextField id=\"normalField\" label=\"Input Integer Value here\" variant=\"outlined\"\r\n                                InputLabelProps={{ style: { color: '#DBD5D5' }, }} onChange={handleNormalFieldInteger}>\r\n                            </TextField>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"sliderHeader\">Slide left or write by clicking on the point\r\n                        <Slider\r\n                            defaultValue={30}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            color='primary'\r\n                            track='inverted'\r\n                            onChange={handleChange}\r\n                            marks={sliderIntValues}\r\n                            min={0}\r\n                            max={100}>\r\n                        </Slider>\r\n                    </div>\r\n                </h2>\r\n                <div>\r\n                    <span className=\"sliderValue\">Slider Integer Value {sliderValue}%</span>\r\n                </div>\r\n\r\n                <div className=\"floatValueDiv\">\r\n                    <Slider\r\n                        defaultValue={1.5}\r\n                        aria-labelledby=\"discrete-slider\"\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={0.1}\r\n                        color='primary'\r\n                        track='inverted'\r\n                        onChange={handleFloatValue}\r\n                        marks={sliderFloatValues}\r\n                        min={0.0}\r\n                        max={10.0}>\r\n                    </Slider>\r\n                </div>\r\n                <div>\r\n                    <span className=\"sliderFloatValue\">Slider Float Value {someFloatValue}</span>\r\n                </div>\r\n\r\n                <div className=\"downloadXML\">\r\n                    <Button \r\n                      style = {{\r\n                        background: 'linear-gradient(45deg, #FF8E53 30%, #be2a92bd 90%)',\r\n                        borderRadius: 3,\r\n                        border: 0,\r\n                        color: 'white',\r\n                        height: 48,\r\n                        padding: '0 30px',\r\n                        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n                    }}\r\n                    variant=\"contained\"  type={\"submit\"} color=\"secondary\">\r\n                        Download XML\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","import React from 'react';\r\nimport Ucu from './components/ucu/Ucu'\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Ucu />\r\n    </div>\r\n  );\r\n\r\n}\r\n"],"sourceRoot":""}